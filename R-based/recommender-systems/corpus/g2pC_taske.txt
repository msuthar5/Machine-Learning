Dynamic programming is a problem-solving method which solves recursive prob
lems. The term is derived from mathematical programming which is commonly r
eferred to as optimisation, hence dynamic programming is an optimal method 
of solving the problems and takes much less time than na√Øve methods. 

Dynamic programming uses the properties of optimal substructure, overlappin
g subproblems and memoization to create an algorithm to solve such problems
. Optimal substructure means that the structure of the problem is made up o
f sub-problems which can be used to find the solution to the problem overal
l. A problem with overlapping subproblems means that the same subproblems m
ay be used to solve many different larger problems. Each sub-problem is sol
ved by being divided into sub-subproblems, until a case is reached which is
 solvable in constant time. Memoization stores solutions which have already
 been computed in order to reduce unnecessary re-computation. 

Dynamic programming can be divided into two main approaches: top-down and b
ottom-up. The top-down approach breaks the problem into subproblems, which 
are solved and remembered, using a combination of memoization and recursion
. The bottom-up approach solves all subproblems that might be need in advan
ce, and then uses these solutions to build up the solutions to the bigger p
roblem. 
