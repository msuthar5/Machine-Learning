When we talk about inheritance in object-oriented programming languages, wh
ich is a concept that was invented in 1967 for Simula, we are usually talki
ng about a way to form new classes and classes are instances of which are c
alled objects and involve using classes that have already been defined. 
Derived classes  are intended to help reuse existing code with little or no
 modification and  are the new classes that  take over (or inherit) attribu
tes and behavior of the pre-existing classes, usually referred to as base c
lasses (or ancestor classes). 
Categorization in computer languages is a powerful way number of processing
 information and inheritance provides the support for representation by cat
egorization. Furthermore,  it is fundamental for helping humans learn by me
ans of generalization in what is known about specific entities is applied t
o a wider group given a belongs relation can be established and cognitive p
rocessing which involves less information being acquired to be stored about
 each specific entity, but in actual fact only its particularities.
An instance of a "fruit" is a generalization of "apple", "orange", "mango" 
and many others. Inheritance can also sometimes be referred to as generaliz
ation, because is-a relationships represent a hierarchy amongst classes of 
objects. It can be considered that fruit is an abstraction of apple, orange
, etc. Conversely, since apples are fruit, they may naturally inherit all t
he properties common to all fruit, such as being a fleshy container for the
 seed of a plant.
 Modules with sufficiently similarities in interfaces would be able to shar
e a lot of code and therefore reducing the complexity of the program. This 
can be known as one of the advantages of inheritance. Therefore inheritance
 can be known to have a further view, a dual, which describes many parts of
 code that are under control of shared control code, named as polymorphism.
 
On the other hand, inheritance is normally accomplished either by replacing
 one or more methods exposed by ancestor, or by adding new methods to those
 exposed by an ancestor. A well known term used for this replacing act is c
alled overriding.
