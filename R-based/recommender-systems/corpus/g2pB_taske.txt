
In mathematics and computer science, dynamic programming is a method of sol
ving problems, that exhibit the properties of overlapping subproblems and o
ptimal substructure. The method takes much less time than naive methods.
The term was originally used in the 1940s to describe the process of solvin
g problems where one needs to find the best decisions one after another. 
The field was founded as a systems analysis and engineering topic that is r
ecognized by the IEEE
The word "programming" in "dynamic programming" has no particular connectio
n to computer programming at all, and instead comes from the term "mathemat
ical programming", a synonym for optimization. Thus, the "program" is the o
ptimal plan for action that is produced. For instance, a finalized schedule
 of events at an exhibition is sometimes called a program. Programming, in 
this sense, means finding an acceptable plan of action, an algorithm.
Optimal substructure means that optimal solutions of subproblems can be use
d to find the optimal solutions of the overall problem. For example, the sh
ortest path to a goal from a vertex in a graph can be found by first comput
ing the shortest path to the goal from all adjacent vertices, and then usin
g this to pick the best overall path.
In general, we can solve a problem with optimal substructure using a three-
step process:
1.Break the problem into smaller subproblems.
2.solve these problems optimally using this three-step process recursively.

3.Use these optimal solutions to construct an optimal solution for the orig
inal problem.
The subproblems are, themselves, solved by dividing them into sub-subproble
ms, and so on, until we reach some simple case that is solvable in constant
 time.
